// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbkdf2.proto

package jo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Kdf_HashAlg int32

const (
	Kdf_SHA256   Kdf_HashAlg = 0
	Kdf_SHA512   Kdf_HashAlg = 1
	Kdf_SHA3_224 Kdf_HashAlg = 2
	Kdf_SHA3_256 Kdf_HashAlg = 3
	Kdf_SHA3_384 Kdf_HashAlg = 4
	Kdf_SHA3_512 Kdf_HashAlg = 5
)

var Kdf_HashAlg_name = map[int32]string{
	0: "SHA256",
	1: "SHA512",
	2: "SHA3_224",
	3: "SHA3_256",
	4: "SHA3_384",
	5: "SHA3_512",
}

var Kdf_HashAlg_value = map[string]int32{
	"SHA256":   0,
	"SHA512":   1,
	"SHA3_224": 2,
	"SHA3_256": 3,
	"SHA3_384": 4,
	"SHA3_512": 5,
}

func (x Kdf_HashAlg) String() string {
	return proto.EnumName(Kdf_HashAlg_name, int32(x))
}

func (Kdf_HashAlg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_86d88026b4f876a9, []int{0, 0}
}

type Kdf struct {
	Salt                 []byte      `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Key                  []byte      `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	KeyLen               int64       `protobuf:"varint,3,opt,name=key_len,json=keyLen,proto3" json:"key_len,omitempty"`
	Iter                 int64       `protobuf:"varint,4,opt,name=iter,proto3" json:"iter,omitempty"`
	Alg                  Kdf_HashAlg `protobuf:"varint,5,opt,name=alg,proto3,enum=jo.Kdf_HashAlg" json:"alg,omitempty"`
	HmacKey              []byte      `protobuf:"bytes,6,opt,name=hmac_key,json=hmacKey,proto3" json:"hmac_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Kdf) Reset()         { *m = Kdf{} }
func (m *Kdf) String() string { return proto.CompactTextString(m) }
func (*Kdf) ProtoMessage()    {}
func (*Kdf) Descriptor() ([]byte, []int) {
	return fileDescriptor_86d88026b4f876a9, []int{0}
}

func (m *Kdf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kdf.Unmarshal(m, b)
}
func (m *Kdf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kdf.Marshal(b, m, deterministic)
}
func (m *Kdf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kdf.Merge(m, src)
}
func (m *Kdf) XXX_Size() int {
	return xxx_messageInfo_Kdf.Size(m)
}
func (m *Kdf) XXX_DiscardUnknown() {
	xxx_messageInfo_Kdf.DiscardUnknown(m)
}

var xxx_messageInfo_Kdf proto.InternalMessageInfo

func (m *Kdf) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Kdf) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Kdf) GetKeyLen() int64 {
	if m != nil {
		return m.KeyLen
	}
	return 0
}

func (m *Kdf) GetIter() int64 {
	if m != nil {
		return m.Iter
	}
	return 0
}

func (m *Kdf) GetAlg() Kdf_HashAlg {
	if m != nil {
		return m.Alg
	}
	return Kdf_SHA256
}

func (m *Kdf) GetHmacKey() []byte {
	if m != nil {
		return m.HmacKey
	}
	return nil
}

func init() {
	proto.RegisterEnum("jo.Kdf_HashAlg", Kdf_HashAlg_name, Kdf_HashAlg_value)
	proto.RegisterType((*Kdf)(nil), "jo.kdf")
}

func init() { proto.RegisterFile("pbkdf2.proto", fileDescriptor_86d88026b4f876a9) }

var fileDescriptor_86d88026b4f876a9 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xb1, 0x6e, 0x83, 0x30,
	0x14, 0x45, 0x6b, 0x4c, 0x20, 0x7a, 0x42, 0xad, 0xf5, 0x96, 0xba, 0x1b, 0xcd, 0xc4, 0x84, 0x54,
	0x13, 0xa2, 0xae, 0x6c, 0x48, 0xed, 0x44, 0xa6, 0x4e, 0xc8, 0x29, 0x26, 0x69, 0xec, 0xc6, 0x51,
	0xc2, 0xe2, 0xcf, 0xee, 0x1f, 0x54, 0xb6, 0x22, 0xb2, 0x9d, 0x73, 0xed, 0xab, 0xab, 0x07, 0xd9,
	0x79, 0xa7, 0x87, 0x51, 0x94, 0xe7, 0x8b, 0x9d, 0x2c, 0x46, 0x47, 0xbb, 0xfa, 0x23, 0x40, 0xf5,
	0x30, 0x22, 0x42, 0x7c, 0x95, 0x66, 0xe2, 0x24, 0x27, 0x45, 0xd6, 0x05, 0x46, 0x06, 0x54, 0x2b,
	0xc7, 0xa3, 0x10, 0x79, 0xc4, 0x67, 0x48, 0xb5, 0x72, 0xbd, 0x51, 0x27, 0x4e, 0x73, 0x52, 0xd0,
	0x2e, 0xd1, 0xca, 0x7d, 0xaa, 0x93, 0xaf, 0xff, 0x4c, 0xea, 0xc2, 0xe3, 0x90, 0x06, 0xc6, 0x57,
	0xa0, 0xd2, 0xec, 0xf9, 0x22, 0x27, 0xc5, 0xa3, 0x78, 0x2a, 0x8f, 0xb6, 0xd4, 0xc3, 0x58, 0xb6,
	0xf2, 0x7a, 0x68, 0xcc, 0xbe, 0xf3, 0x6f, 0xf8, 0x02, 0xcb, 0xc3, 0xaf, 0xfc, 0xee, 0xfd, 0x4c,
	0x12, 0x66, 0x52, 0xef, 0x1f, 0xca, 0xad, 0xbe, 0x20, 0xbd, 0x7d, 0x45, 0x80, 0x64, 0xdb, 0x36,
	0xa2, 0xde, 0xb0, 0x87, 0x1b, 0xd7, 0x6f, 0x82, 0x11, 0xcc, 0x60, 0xb9, 0x6d, 0x9b, 0xaa, 0x17,
	0x62, 0xcd, 0xa2, 0xbb, 0xd5, 0x1b, 0x46, 0x67, 0xab, 0xde, 0xd7, 0x2c, 0x9e, 0xcd, 0xf7, 0x16,
	0xbb, 0x24, 0x9c, 0x5f, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0xde, 0x86, 0x51, 0x85, 0x0e, 0x01,
	0x00, 0x00,
}
